name: .NET Core

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET Core for Actual Source
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101
 
    - name: Install src dependencies
      run: dotnet restore src/FakeXrmEasy.Core.csproj
     
    - name: Build src proj
      run: dotnet build src/FakeXrmEasy.Core.csproj --configuration Debug --no-restore

    - name: Install test dependencies
      run: dotnet restore tests/FakeXrmEasy.Core.Tests.csproj

    - name: Build test proj
      run: dotnet build tests/FakeXrmEasy.Core.Tests.csproj --configuration Debug --no-restore
  
    - name: Test
      run: dotnet test tests/FakeXrmEasy.Core.Tests.csproj --configuration Debug --no-restore --verbosity normal
  
    - name: Sonarscanner for dotnet
      uses: Secbyte/dotnet-sonarscanner@v2.2
      with:
        buildCommand: dotnet build ./tests/FakeXrmEasy.Core.Tests.csproj --configuration Debug --no-restore
        testCommand: dotnet test ./tests/FakeXrmEasy.Core.Tests.csproj --configuration Debug --no-restore --verbosity normal
        projectKey: ${{ secrets.SONAR_PROJECT_KEY }}
        projectName: fake-xrm-easy-core
        sonarOrganisation: dynamicsvalue
        beginArguments: |
            /d:sonar.verbose="true"
            /d:sonar.cs.opencover.reportsPaths="/path/to/coverage.xml"
            /d:sonar.coverage.exclusions="**/*.cs"
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    
    
    
