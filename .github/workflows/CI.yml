name: .NET Core

on:
  push:
    branches: [ master, dev ]
    paths-ignore:
      - 'coverage/**'
      - '*.md'
      - '*.txt'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET Core for Actual Source
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.201
 
    - name: Disable local packages feed
      run: dotnet nuget disable source "local-packages"

    - name: Enable GitHub packages feed
      run: dotnet nuget enable source github

    - name: Build
      run: pwsh ./build.ps1
      env: 
        NUGET_USERNAME: DynamicsValue
        NUGET_TOKEN: ${{ secrets.PACKAGES_TOKEN }} 

    - name: Pack
      run: pwsh ./pack.ps1 -versionSuffix "ci.${{ github.head_ref }}${{ github.run_number }}"
      env: 
        NUGET_USERNAME: DynamicsValue
        NUGET_TOKEN: ${{ secrets.PACKAGES_TOKEN }} 

    - name: Quality Gate
      uses: DynamicsValue/dotnet-sonarscanner@v2.3
      with:
        buildCommand: dotnet restore . /p:CoreOnly=True && echo restore completed && dotnet build . --configuration Debug --framework netcoreapp3.1 --no-restore /p:CoreOnly=True && echo build completed
        testCommand: dotnet test . /p:CoreOnly=True --configuration Debug --framework netcoreapp3.1 --verbosity normal --collect:"XPlat code coverage" --settings tests/.runsettings --results-directory ./coverage
        projectKey: ${{ secrets.SONAR_PROJECT_KEY }}
        projectName: fake-xrm-easy-core
        sonarOrganisation: dynamicsvalue
        beginArguments: >
            /d:sonar.verbose="true"
            /d:sonar.qualitygate.wait="true"
            /d:sonar.cs.opencover.reportsPaths='"coverage/**/coverage.opencover.xml"'
            /d:sonar.coverage.exclusions='"tests/**"'
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
        NUGET_USERNAME: DynamicsValue
        NUGET_TOKEN: ${{ secrets.PACKAGES_TOKEN }} 
    
    - name: Push
      run: pwsh ./push.ps1 -packageSource "github"
      env: 
        NUGET_USERNAME: DynamicsValue
        NUGET_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
    
    
